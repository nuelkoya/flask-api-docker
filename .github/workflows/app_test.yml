name: Flask App Test

on: 
    push:
        branches:
            - main
    workflow_dispatch:
        

    
jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        
        
    
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: ${{ secrets.DOCKER_POSTGRES_USER}}
                    POSTGRES_PASSWORD: ${{secrets.DOCKER_POSTGRES_PASSWORD}}
                    POSTGRES_DB: ${{ secrets.DOCKER_POSTGRES_DB }}
                ports:
                    - 5432:5432
                options: >-
                 --health-cmd="pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
                 --health-interval=10s
                 --health-timeout=5s
                 --health-retries=5

    
        steps:
         - name: Checkout Code
           uses: actions/checkout@v5
            
         - name: Set up Python ${{ matrix.python-version }}
           uses: actions/setup-python@v5
           with:
            python-version: ${{ matrix.python-version }}

         - name: Display Python version
           run: python -c "import sys; print(sys.version)"

         - name: Install dependecies
           run: pip install -r requirements.txt

         - name: Run test
           run: PYTHONPATH=. pytest

    
    docker-test:
        runs-on: ubuntu-latest
        needs: test  # depends on the CI job that runs pytest
        steps:
         - uses: actions/checkout@v5

         - name: Build Docker image
           run: docker build -t app-test .

         - name: Run Flask container
           run: |
             docker run -d --name flask-app \
                -e DATABASE_URL=postgresql://${{ secrets.DOCKER_POSTGRES_USER }}:${{ secrets.DOCKER_POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.DOCKER_POSTGRES_DB }} \
                -p 5501:5501 app-test
             sleep 10

         - name: Test /health endpoint
           run: | 
            curl --fail http://localhost:5510/
            curl --fail http://localhost:5520/


         - name: Stop container
           run: docker rm -f flask-app



